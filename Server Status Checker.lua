--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...) return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33) if v33 then local v83=0;local v84;while true do if (v83==(0 -0)) then v84=(v31/(2^(v32-(2 -1))))%((3 -1)^(((v33-1) -(v32-1)) + (878 -(282 + 595)))) ;return v84-(v84%(2 -1)) ;end end else local v85=619 -(555 + 64) ;local v86;while true do if (v85==(931 -(857 + 74))) then v86=(570 -(367 + 201))^(v32-((2565 -(1523 + 114)) -(214 + 713))) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or (0 + 0 + 0) ;end end end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24() local v34,v35,v36,v37=v1(v16,v19,v19 + (3 -0) );v19=v19 + 4 ;return (v37 * (16778281 -(68 + 997))) + (v36 * (285370 -219834)) + (v35 * ((1643 -(32 + 85)) -(226 + 1044))) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29() local v38=37 -(24 + 13) ;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v38==3) then v45=nil;v46=nil;v38=1486 -(1395 + 87) ;end if ((1374 -(729 + 645))~=v38) then else v39=0;v40=nil;v38=393 -(232 + 160) ;end if (v38==4) then while true do if (v39==(3 -1)) then local v98=0;while true do if (v98==(1277 -(37 + 1240))) then v44=nil;v45=nil;v98=3 -2 ;end if (v98~=(3 -2)) then else v39=4 -1 ;break;end end end if (v39~=1) then else local v99=0;local v100;while true do if (v99==(0 + 0)) then v100=0 -0 ;while true do if (v100~=(0 + 0)) then else v42=nil;v43=nil;v100=1;end if (v100~=(1475 -(1329 + 145))) then else v39=973 -(140 + 831) ;break;end end break;end end end if (v39==(1850 -(1409 + 441))) then local v101=718 -(15 + 703) ;while true do if (v101~=1) then else v39=1;break;end if (v101~=(0 + 0)) then else v40=438 -(262 + 176) ;v41=nil;v101=1722 -(345 + 1376) ;end end end if (v39==3) then v46=nil;while true do local v102=688 -(198 + 490) ;while true do if (v102~=(4 -3)) then else if (v40==(4 -2)) then local v104=0;local v105;while true do if (v104==0) then v105=0;while true do if (v105~=(1206 -(696 + 510))) then else local v232=0;while true do if (v232==0) then for v245=1,v45 do local v246=0;local v247;local v248;local v249;while true do if (v246==(0 -0)) then local v255=1262 -(1091 + 171) ;local v256;while true do if ((0 + 0)==v255) then v256=0 -0 ;while true do if (v256==(0 -0)) then v247=0;v248=nil;v256=1;end if (v256==1) then v246=375 -(123 + 251) ;break;end end break;end end end if (v246==1) then v249=nil;while true do if (v247~=(0 -0)) then else local v262=698 -(208 + 490) ;while true do if (v262~=1) then else v247=1 + 0 ;break;end if (v262==(0 + 0)) then local v266=836 -(660 + 176) ;while true do if (v266==(1 + 0)) then v262=203 -(14 + 188) ;break;end if (v266~=(675 -(534 + 141))) then else local v273=0;while true do if (v273~=0) then else v248=v22();v249=nil;v273=1 + 0 ;end if (v273~=1) then else v266=1 + 0 ;break;end end end end end end end if (v247~=(1 + 0)) then else if (v248==(1 -0)) then v249=v22()~=0 ;elseif (v248==2) then v249=v25();elseif (v248==(4 -1)) then v249=v26();end v46[v245]=v249;break;end end break;end end end v44[8 -5 ]=v22();v232=1 + 0 ;end if (v232~=1) then else v105=1 + 0 ;break;end end end if (v105==(397 -(115 + 281))) then for v237=1,v24() do local v238=0;local v239;while true do if (v238~=(0 -0)) then else v239=v22();if (v21(v239,1,1 + 0 )~=0) then else local v250=0 -0 ;local v251;local v252;local v253;while true do if ((0 -0)~=v250) then else local v257=867 -(550 + 317) ;local v258;while true do if (v257~=(0 -0)) then else v258=0 -0 ;while true do if (v258~=1) then else v250=2 -1 ;break;end if (v258==(285 -(134 + 151))) then v251=v21(v239,1667 -(970 + 695) ,5 -2 );v252=v21(v239,1994 -(582 + 1408) ,6);v258=3 -2 ;end end break;end end end if (v250~=3) then else if (v21(v252,3,3 -0 )==(3 -2)) then v253[4]=v46[v253[4]];end v41[v237]=v253;break;end if ((1825 -(1195 + 629))~=v250) then else local v260=0;while true do if (v260~=(0 -0)) then else v253={v23(),v23(),nil,nil};if (v251==(0 + 0)) then local v267=0 -0 ;local v268;while true do if (v267~=(0 -0)) then else v268=0 + 0 ;while true do if (v268~=0) then else v253[1639 -(1373 + 263) ]=v23();v253[4]=v23();break;end end break;end end elseif (v251==(1001 -(451 + 549))) then v253[3]=v24();elseif (v251==(1 + 1)) then v253[3]=v24() -(2^(24 -8)) ;elseif (v251~=(4 -1)) then else local v278=0;local v279;while true do if (v278==0) then v279=0;while true do if ((1384 -(746 + 638))~=v279) then else v253[3]=v24() -(2^(7 + 9)) ;v253[4]=v23();break;end end break;end end end v260=1 -0 ;end if ((342 -(218 + 123))~=v260) then else v250=1583 -(1535 + 46) ;break;end end end if (2==v250) then local v261=0 + 0 ;while true do if (v261==1) then v250=1 + 2 ;break;end if (v261==0) then if (v21(v252,561 -(306 + 254) ,1 + 0 )~=1) then else v253[3 -1 ]=v46[v253[1469 -(899 + 568) ]];end if (v21(v252,2 + 0 ,4 -2 )~=1) then else v253[606 -(268 + 335) ]=v46[v253[3]];end v261=291 -(60 + 230) ;end end end end end break;end end end v40=3;break;end end break;end end end if (v40~=3) then else local v106=572 -(426 + 146) ;local v107;while true do if ((0 + 0)==v106) then v107=1456 -(282 + 1174) ;while true do if ((811 -(569 + 242))==v107) then for v240=2 -1 ,v24() do v42[v240-1 ]=v29();end return v44;end end break;end end end break;end if (v102~=(0 + 0)) then else if (v40==0) then local v108=0;local v109;while true do if (v108~=(1024 -(706 + 318))) then else v109=0;while true do if (v109==(1251 -(721 + 530))) then v41={};v42={};v109=1272 -(945 + 326) ;end if (v109~=1) then else v43={};v40=2 -1 ;break;end end break;end end end if (1==v40) then local v110=0;local v111;while true do if (v110==0) then v111=0;while true do if (v111==(1 + 0)) then v46={};v40=2;break;end if (v111==0) then local v233=700 -(271 + 429) ;local v234;while true do if (v233~=0) then else v234=0;while true do if (v234==(1 + 0)) then v111=1;break;end if (v234~=0) then else local v254=1500 -(1408 + 92) ;while true do if (v254~=1) then else v234=1;break;end if (v254==(1086 -(461 + 625))) then v44={v41,v42,nil,v43};v45=v24();v254=1;end end end end break;end end end end break;end end end v102=1172 -(418 + 753) ;end end end break;end end break;end if ((1 + 1)~=v38) then else v43=nil;v44=nil;v38=3;end if (v38==(1 + 0)) then v41=nil;v42=nil;v38=1 + 1 ;end end end v30=nil;v18=7;end if (v18==4) then function v25() local v47=v24();local v48=v24();local v49=1 + 0 ;local v50=(v21(v48,530 -(406 + 123) ,1789 -(1749 + 20) ) * (2^((174 -(122 + 44)) + (40 -16)))) + v47 ;local v51=v21(v48,1343 -(1249 + (242 -169)) ,12 + 19 );local v52=((v21(v48,1177 -(466 + 553 + 126) )==(2 -1)) and  -(2 -(1 + 0))) or 1 ;if (v51==(1900 -(106 + 1794))) then if (v50==(0 + 0)) then return v52 * (0 + 0) ;else local v93=0 -0 ;while true do if (v93==(0 -0)) then v51=115 -(4 + (222 -112)) ;v49=584 -(57 + (592 -(30 + 35))) ;break;end end end elseif (v51==2047) then return ((v50==(1427 -(41 + 1386))) and (v52 * ((104 -(17 + 86))/(0 + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(2281 -1258) ) * (v49 + (v50/(2^(150 -98)))) ;end v26=nil;function v26(v53) local v54;if  not v53 then v53=v24();if (v53==(0 + 0)) then return "";end end v54=v3(v16,v19,(v19 + v53) -(1258 -(1043 + 214)) );v19=v19 + v53 ;local v55={};for v67=3 -2 , #v54 do v55[v67]=v2(v1(v3(v54,v67,v67)));end return v6(v55);end v18=5;end if (v18==2) then function v22() local v56=(274 + 938) -(323 + 889) ;local v57;while true do if (((415 -(15 + 398)) -1)==v56) then return v57;end if ((580 -(361 + 219))==v56) then v57=v1(v16,v19,v19);v19=v19 + (321 -(53 + 267)) ;v56=1;end end end v23=nil;function v23() local v58,v59=v1(v16,v19,v19 + (984 -(18 + 964)) );v19=v19 + (7 -5) ;return (v59 * 256) + v58 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60) if (v1(v60,2)==79) then local v87=0;while true do if (v87==0) then v20=v0(v3(v60,1,1));return "";end end else local v88=0;local v89;while true do if (v88==0) then v89=v2(v0(v60,16));if v20 then local v103=v5(v89,v20);v20=nil;return v103;else return v89;end break;end end end end);v18=1;end if (v18==7) then function v30(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...) local v69=v64;local v70=v65;local v71=v66;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v90=0,v77 do if (v90>=v71) then v75[v90-v71 ]=v76[v90 + 1 ];else v79[v90]=v76[v90 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1];if (v82<=24) then if (v82<=11) then if (v82<=5) then if (v82<=2) then if (v82<=0) then local v112=v81[2];local v113=v79[v81[3]];v79[v112 + 1 ]=v113;v79[v112]=v113[v81[4]];elseif (v82==1) then if  not v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else local v147=v81[3];local v148=v79[v147];for v203=v147 + 1 ,v81[4] do v148=v148   .. v79[v203] ;end v79[v81[2]]=v148;end elseif (v82<=3) then local v117=0;local v118;while true do if (v117==0) then v118=v79[v81[4]];if  not v118 then v73=v73 + 1 ;else v79[v81[2]]=v118;v73=v81[3];end break;end end elseif (v82==4) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else local v150=v81[3];local v151=v79[v150];for v205=v150 + 1 ,v81[4] do v151=v151   .. v79[v205] ;end v79[v81[2]]=v151;end elseif (v82<=8) then if (v82<=6) then local v119=v81[2];local v120={v79[v119](v13(v79,v119 + 1 ,v81[3]))};local v121=0;for v139=v119,v81[4] do v121=v121 + 1 ;v79[v139]=v120[v121];end elseif (v82==7) then v79[v81[2]][v81[3]]=v79[v81[4]];else v79[v81[2]][v81[3]]=v81[4];end elseif (v82<=9) then v79[v81[2]]=v79[v81[3]];elseif (v82>10) then v79[v81[2]]=v63[v81[3]];elseif v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=17) then if (v82<=14) then if (v82<=12) then local v124=v81[2];local v125=v79[v124];local v126=v81[3];for v142=1,v126 do v125[v142]=v79[v124 + v142 ];end elseif (v82==13) then local v159=0;local v160;while true do if (v159==0) then v160=v81[2];v79[v160]=v79[v160]();break;end end else v79[v81[2]]();end elseif (v82<=15) then v79[v81[2]][v81[3]]=v81[4];elseif (v82==16) then v79[v81[2]]=v79[v81[3]];else local v163=v81[2];v79[v163]=v79[v163](v79[v163 + 1 ]);end elseif (v82<=20) then if (v82<=18) then for v145=v81[2],v81[3] do v79[v145]=nil;end elseif (v82==19) then v73=v81[3];else v79[v81[2]]=v81[3];end elseif (v82<=22) then if (v82>21) then v79[v81[2]]=v81[3];else local v170=v79[v81[4]];if  not v170 then v73=v73 + 1 ;else local v218=0;while true do if (v218==0) then v79[v81[2]]=v170;v73=v81[3];break;end end end end elseif (v82==23) then local v171=0;local v172;while true do if (0==v171) then v172=v81[2];v79[v172](v79[v172 + 1 ]);break;end end else v79[v81[2]]();end elseif (v82<=37) then if (v82<=30) then if (v82<=27) then if (v82<=25) then v63[v81[3]]=v79[v81[2]];elseif (v82>26) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else local v173=v81[2];local v174={v79[v173](v13(v79,v173 + 1 ,v81[3]))};local v175=0;for v206=v173,v81[4] do local v207=0;while true do if (0==v207) then v175=v175 + 1 ;v79[v206]=v174[v175];break;end end end end elseif (v82<=28) then local v131=v81[2];v79[v131]=v79[v131](v13(v79,v131 + 1 ,v81[3]));elseif (v82==29) then local v176=v81[2];v79[v176]=v79[v176](v13(v79,v176 + 1 ,v81[3]));else local v178=v81[2];local v179=v79[v81[3]];v79[v178 + 1 ]=v179;v79[v178]=v179[v81[4]];end elseif (v82<=33) then if (v82<=31) then local v133=0;local v134;local v135;while true do if (v133==0) then v134=v81[2];v135=v79[v134];v133=1;end if (v133==1) then for v220=v134 + 1 ,v81[3] do v7(v135,v79[v220]);end break;end end elseif (v82==32) then local v183=v81[2];v79[v183]=v79[v183]();else v79[v81[2]]={};end elseif (v82<=35) then if (v82==34) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82>36) then for v210=v81[2],v81[3] do v79[v210]=nil;end elseif (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=43) then if (v82<=40) then if (v82<=38) then if  not v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>39) then local v189=v81[2];local v190=v79[v189];local v191=v81[3];for v212=1,v191 do v190[v212]=v79[v189 + v212 ];end else do return;end end elseif (v82<=41) then v73=v81[3];elseif (v82==42) then v79[v81[2]]={};else v79[v81[2]]=v79[v81[3]][v81[4]];end elseif (v82<=46) then if (v82<=44) then v79[v81[2]]=v63[v81[3]];elseif (v82>45) then v79[v81[2]]=v79[v81[3]][v81[4]];else do return;end end elseif (v82<=48) then if (v82>47) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else local v197=0;local v198;while true do if (v197==0) then v198=v81[2];v79[v198](v79[v198 + 1 ]);break;end end end elseif (v82==49) then v63[v81[3]]=v79[v81[2]];else local v201=0;local v202;while true do if (0==v201) then v202=v81[2];v79[v202]=v79[v202](v79[v202 + 1 ]);break;end end end v73=v73 + 1 ;end end;end return v30(v29(),{},v17)(...);end end end return v15("LOL!",v9(),...);