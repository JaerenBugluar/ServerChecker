--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v68=0;while true do if (v68==0) then v19=v0(v3(v30,1,1));return "";end end else local v69=0;local v70;while true do if (v69==0) then v70=v2(v0(v30,16));if v19 then local v102=v5(v70,v19);v19=nil;return v102;else return v70;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v71=(v31/((929 -(214 + 713))^(v32-(1 + 0))))%((5 -3)^(((v33-(2 -(4 -3))) -(v32-(1 -0))) + (2 -1))) ;return v71-(v71%1) ;else local v72=0 + (117 -(32 + 85)) ;local v73;while true do if (v72==(0 + 0)) then v73=(621 -(555 + 64))^(v32-(932 -(857 + 74))) ;return (((v31%(v73 + v73))>=v73) and (1066 -(16 + 52 + 997))) or ((1525 -(892 + 65)) -(367 + 201)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (4 -2) );v18=v18 + 2 ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37=(0 -0) -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1 -0)) then return (v41 * (16777566 -(87 + 263))) + (v40 * (65716 -(67 + 113))) + (v39 * (689 -433)) + v38 ;end if (v37==(0 + 0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (9 -5) ;v37=1 + 0 ;end end end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(0 -0)) then v43=v23();v44=v23();v42=(2110 -922) -(1069 + 118) ;end if (v42==(6 -3)) then if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * ((1080 -(1020 + 60)) -0) ;else local v103=0 + 0 ;while true do if (v103==(791 -((1791 -(630 + 793)) + 423))) then v47=3 -(6 -4) ;v45=18 -(10 + 8) ;break;end end end elseif (v47==(7874 -5827)) then return ((v46==(442 -(416 + 26))) and (v48 * (((14 -11) -(1 + 1))/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(56 + 967) ) * (v45 + (v46/((3 -(3 -2))^(490 -(145 + (2040 -(760 + 987))))))) ;end if (v42==2) then v47=v20(v44,451 -(44 + 386) ,1517 -(998 + 488) );v48=((v20(v44,11 + 8 + 13 )==(1 + 0)) and  -(773 -(201 + 571))) or ((1905 -(745 + 21)) -(116 + 352 + 670)) ;v42=3;end if (v42==(4 -3)) then v45=1 + 0 ;v46=(v20(v44,1,73 -53 ) * ((7 -5)^((1776 -(261 + 624)) -(814 + (123 -78))))) + v43 ;v42=4 -2 ;end end end local function v25(v49) local v50=0;local v51;local v52;while true do if (v50==(3 -2)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=1 + 1 ;end if ((3 + 0)==v50) then return v6(v52);end if (v50==(1055 -(87 + 968))) then v51=nil;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=(2 -1) + (1817 -(1703 + 114)) ;end if (v50==(4 -2)) then v52={};for v77=1414 -(447 + 966) , #v51 do v52[v77]=v2(v1(v3(v51,v77,v77)));end v50=3;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0 + 0 ;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v53==(0 + 0)) then v54=0;v55=nil;v53=1;end if (v53~=(2 + 0)) then else v58=nil;v59=nil;v53=3;end if (v53==(1 + 2)) then v60=nil;while true do if (v54==(560 -(306 + 254))) then local v95=0;while true do if (v95~=(1 + 0)) then else v57={};v54=2 -1 ;break;end if (v95==(0 -0)) then v55={};v56={};v95=1;end end end if (v54~=(1470 -(899 + 568))) then else local v96=1551 -(1126 + 425) ;local v97;while true do if ((0 + 0)~=v96) then else v97=0 -0 ;while true do if (v97~=(0 -0)) then else local v110=1121 -(118 + 1003) ;while true do if (v110==(0 -0)) then for v119=378 -(142 + 235) ,v23() do v56[v119-1 ]=v28();end return v58;end end end end break;end end end if (v54==(604 -(268 + 335))) then local v98=0 -0 ;local v99;while true do if (v98==0) then v99=0;while true do if ((291 -(60 + 230))==v99) then v60={};v54=2;break;end if (v99==0) then local v111=0 + 0 ;while true do if (v111==(977 -(553 + 424))) then v58={v55,v56,nil,v57};v59=v23();v111=1 + 0 ;end if ((812 -(569 + 242))==v111) then v99=1 + 0 ;break;end end end end break;end end end if (v54==(2 + 0)) then local v100=0 -0 ;local v101;while true do if ((0 -0)==v100) then v101=0 -0 ;while true do if ((0 + 0)~=v101) then else local v112=0 + 0 ;while true do if ((0 -0)~=v112) then else for v121=1025 -(706 + 318) ,v59 do local v122=0;local v123;local v124;while true do if (v122==0) then v123=v21();v124=nil;v122=1;end if ((1252 -(721 + 530))==v122) then if (v123==(1272 -(945 + 326))) then v124=v21()~=(1329 -(797 + 532)) ;elseif (v123==(4 -2)) then v124=v24();elseif (v123==(3 + 0)) then v124=v25();end v60[v121]=v124;break;end end end v58[3]=v21();v112=1;end if (v112~=(1 + 0)) then else v101=1 + 0 ;break;end end end if (v101==(701 -(271 + 429))) then for v113=1 + 0 ,v23() do local v114=1202 -(373 + 829) ;local v115;local v116;local v117;while true do if (1==v114) then v117=nil;while true do if ((1500 -(1408 + 92))~=v115) then else local v141=1086 -(461 + 625) ;while true do if (v141~=(1289 -(993 + 295))) then else v115=1;break;end if (v141~=(0 + 0)) then else v116=0 -0 ;v117=nil;v141=1 -0 ;end end end if (v115~=(1 + 0)) then else while true do if (v116==(1171 -(418 + 753))) then v117=v21();if (v20(v117,1 + 0 ,1)==(0 + 0)) then local v245=0 -0 ;local v246;local v247;local v248;local v249;while true do if (v245==(337 -(144 + 192))) then local v261=0 + 0 ;while true do if (v261==(0 + 0)) then v248=nil;v249=nil;v261=1 + 0 ;end if (v261~=1) then else v245=2 + 0 ;break;end end end if (v245==(1 + 1)) then while true do if ((1504 -(363 + 1141))==v246) then local v263=1580 -(1183 + 397) ;local v264;while true do if (v263==(0 -0)) then v264=0 + 0 ;while true do if (v264==(0 + 0)) then local v272=529 -(406 + 123) ;while true do if (0==v272) then local v279=0 + 0 ;while true do if (v279~=0) then else v247=v20(v117,2,7 -4 );v248=v20(v117,1937 -(565 + 1368) ,6);v279=3 -2 ;end if (v279==(1770 -(1749 + 20))) then v272=1 + 0 ;break;end end end if (v272~=(1323 -(1249 + 73))) then else v264=1;break;end end end if (v264~=(1 -0)) then else v246=1 + 0 ;break;end end break;end end end if (v246~=(1148 -(466 + 679))) then else if (v20(v248,6 -3 ,8 -5 )~=(1901 -(106 + 1794))) then else v249[860 -(564 + 292) ]=v60[v249[4]];end v55[v113]=v249;break;end if (v246~=(2 -0)) then else local v266=0;while true do if ((2 -1)==v266) then v246=1 + 2 ;break;end if (v266==(0 + 0)) then local v271=476 -(41 + 435) ;while true do if (v271~=(1 + 0)) then else v266=1 + 0 ;break;end if (v271==(1125 -(936 + 189))) then if (v20(v248,1 + 0 ,2 -1 )==(1614 -(1565 + 48))) then v249[5 -3 ]=v60[v249[116 -(4 + 110) ]];end if (v20(v248,2,586 -(57 + 527) )==(1428 -(41 + 1386))) then v249[3]=v60[v249[7 -4 ]];end v271=1 -0 ;end end end end end if (v246~=(1093 -(975 + 117))) then else local v267=0;local v268;while true do if (v267==(103 -(17 + 86))) then v268=0 + 0 ;while true do if (v268==1) then v246=1877 -(157 + 1718) ;break;end if (v268==(0 -0)) then local v273=0 -0 ;local v274;while true do if (v273==(0 -0)) then v274=166 -(122 + 44) ;while true do if (v274==(1 -0)) then v268=1;break;end if (v274~=(0 -0)) then else v249={v22(),v22(),nil,nil};if (v247==(0 -0)) then local v280=0 -0 ;while true do if (v280==0) then v249[3]=v22();v249[2 + 2 ]=v22();break;end end elseif (v247==(1 -0)) then v249[7 -4 ]=v23();elseif (v247==(67 -(30 + 35))) then v249[3 + 0 ]=v23() -(2^16) ;elseif (v247==(614 -(602 + 9))) then local v285=1189 -(449 + 740) ;local v286;local v287;while true do if (v285~=(1258 -(1043 + 214))) then else while true do if (v286~=(0 -0)) then else v287=1212 -(323 + 889) ;while true do if (v287==(947 -(245 + 702))) then v249[7 -4 ]=v23() -((6 -4)^(596 -(361 + 219))) ;v249[324 -(53 + 267) ]=v22();break;end end break;end end break;end if (v285==0) then v286=0 + 0 ;v287=nil;v285=414 -(15 + 398) ;end end end v274=983 -(18 + 964) ;end end break;end end end end break;end end end end break;end if (v245==0) then local v262=0;while true do if (v262~=0) then else v246=0 -0 ;v247=nil;v262=3 -2 ;end if (v262==(1 + 0)) then v245=1 + 0 ;break;end end end end end break;end end break;end end break;end if (v114==(0 + 0)) then local v125=850 -(20 + 830) ;while true do if (v125==(0 -0)) then v115=0 + 0 ;v116=nil;v125=1206 -(902 + 303) ;end if (v125==1) then v114=127 -(116 + 10) ;break;end end end end end v54=3;break;end end break;end end end end break;end if ((1 + 0)==v53) then v56=nil;v57=nil;v53=740 -(542 + 196) ;end end end local function v29(v61,v62,v63) local v64=0;local v65;local v66;local v67;while true do if (v64==1) then v67=v61[3];return function(...) local v79=v65;local v80=v66;local v81=v67;local v82=v27;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v12("#",...) -1 ;local v88={};local v89={};for v93=0,v87 do if (v93>=v81) then v85[v93-v81 ]=v86[v93 + 1 ];else v89[v93]=v86[v93 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v94=0;while true do if (v94==0) then v91=v79[v83];v92=v91[1];v94=1;end if (v94==1) then if (v92<=24) then if (v92<=11) then if (v92<=5) then if (v92<=2) then if (v92<=0) then local v126=0;local v127;while true do if (v126==0) then v127=v91[2];v89[v127]=v89[v127]();break;end end elseif (v92==1) then v89[v91[2]]=v89[v91[3]];elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=3) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>4) then v89[v91[2]]=v63[v91[3]];else local v148=v91[2];local v149=v89[v91[3]];v89[v148 + 1 ]=v149;v89[v148]=v149[v91[4]];end elseif (v92<=8) then if (v92<=6) then v89[v91[2]]=v91[3];elseif (v92==7) then local v153=v91[2];v89[v153](v89[v153 + 1 ]);else v89[v91[2]]={};end elseif (v92<=9) then local v130=v91[2];v89[v130]=v89[v130](v89[v130 + 1 ]);elseif (v92>10) then v89[v91[2]]=v63[v91[3]];else v89[v91[2]][v91[3]]=v91[4];end elseif (v92<=17) then if (v92<=14) then if (v92<=12) then v63[v91[3]]=v89[v91[2]];elseif (v92==13) then v89[v91[2]]=v91[3];else local v161=v91[2];local v162=v89[v161];local v163=v91[3];for v215=1,v163 do v162[v215]=v89[v161 + v215 ];end end elseif (v92<=15) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>16) then for v218=v91[2],v91[3] do v89[v218]=nil;end else local v165=v91[2];v89[v165](v89[v165 + 1 ]);end elseif (v92<=20) then if (v92<=18) then local v134=v89[v91[4]];if  not v134 then v83=v83 + 1 ;else v89[v91[2]]=v134;v83=v91[3];end elseif (v92>19) then local v168=v91[2];v89[v168]=v89[v168]();else local v170=v91[3];local v171=v89[v170];for v220=v170 + 1 ,v91[4] do v171=v171   .. v89[v220] ;end v89[v91[2]]=v171;end elseif (v92<=22) then if (v92==21) then v89[v91[2]][v91[3]]=v91[4];else local v175=0;local v176;local v177;local v178;while true do if (v175==0) then v176=v91[2];v177=v89[v176];v175=1;end if (1==v175) then v178=v91[3];for v250=1,v178 do v177[v250]=v89[v176 + v250 ];end break;end end end elseif (v92==23) then do return;end else v83=v91[3];end elseif (v92<=37) then if (v92<=30) then if (v92<=27) then if (v92<=25) then local v135=v91[2];local v136=v89[v135];for v142=v135 + 1 ,v91[3] do v7(v136,v89[v142]);end elseif (v92==26) then v89[v91[2]]();elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=28) then v89[v91[2]][v91[3]]=v89[v91[4]];elseif (v92>29) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=33) then if (v92<=31) then do return;end elseif (v92>32) then local v182=v91[2];v89[v182]=v89[v182](v89[v182 + 1 ]);elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=35) then if (v92>34) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v89[v91[3]];end elseif (v92>36) then local v186=0;local v187;local v188;while true do if (v186==0) then v187=v91[3];v188=v89[v187];v186=1;end if (v186==1) then for v253=v187 + 1 ,v91[4] do v188=v188   .. v89[v253] ;end v89[v91[2]]=v188;break;end end else local v189=v91[2];v89[v189]=v89[v189](v13(v89,v189 + 1 ,v91[3]));end elseif (v92<=43) then if (v92<=40) then if (v92<=38) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>39) then v89[v91[2]]=v89[v91[3]][v91[4]];else v83=v91[3];end elseif (v92<=41) then v89[v91[2]]={};elseif (v92==42) then v89[v91[2]][v91[3]]=v89[v91[4]];else local v197=v91[2];local v198={v89[v197](v13(v89,v197 + 1 ,v91[3]))};local v199=0;for v221=v197,v91[4] do local v222=0;while true do if (v222==0) then v199=v199 + 1 ;v89[v221]=v198[v199];break;end end end end elseif (v92<=46) then if (v92<=44) then v89[v91[2]]();elseif (v92>45) then v63[v91[3]]=v89[v91[2]];else local v202=0;local v203;while true do if (v202==0) then v203=v91[2];v89[v203]=v89[v203](v13(v89,v203 + 1 ,v91[3]));break;end end end elseif (v92<=48) then if (v92>47) then local v204=0;local v205;local v206;while true do if (v204==1) then v89[v205 + 1 ]=v206;v89[v205]=v206[v91[4]];break;end if (v204==0) then v205=v91[2];v206=v89[v91[3]];v204=1;end end else local v207=0;local v208;while true do if (0==v207) then v208=v89[v91[4]];if  not v208 then v83=v83 + 1 ;else v89[v91[2]]=v208;v83=v91[3];end break;end end end elseif (v92==49) then local v209=0;local v210;local v211;local v212;while true do if (v209==1) then v212=0;for v256=v210,v91[4] do v212=v212 + 1 ;v89[v256]=v211[v212];end break;end if (v209==0) then v210=v91[2];v211={v89[v210](v13(v89,v210 + 1 ,v91[3]))};v209=1;end end else for v223=v91[2],v91[3] do v89[v223]=nil;end end v83=v83 + 1 ;break;end end end end;end if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end end end return v29(v28(),{},v17)(...);end return vv9(),...);